{
  "APIs for market making and liquidity": "",
  "On Vega, price takers pay a fee on every trade - 100% of which is distributed between validators and token holders, market makers and liquidity providers. There are no gas fees on Vega.": "",
  "Use Vega": "",
  "Market makers": "",
  "Place static or pegged limit order volume on the book, manage your spread and position, and receive maker fees when an incoming trade matches your order. Currently set to < network param > of the trade value.": "",
  "Liquidity providers": "",
  "To access liquidity provision fees on Vega, commit (and continue to support) a set bond amount to help keep a market liquid. The total liquidity needed on a market is determined by the protocol, and you specify the fee % you'd like to receive. Active liquidity providers (starting with the cheapest first) then receive liquidity provider fees.": "",
  "Prerequisites": "",
  "You know how to actively manage liquidity deployed to a limit order book": "",
  "You understand how derivates pricing work, specifically cash settled-futures": "",
  "You can code automated trading strategies and operate and monitor them 24/7": "",
  "You understand the nuances of integrating with a blockchain, and for example, you might be familiar with tools like Web3.js used to interact with Ethereum": "",
  "You know how to manage risk in a leveraged trading environment": "",
  "Check out our APIs": "",
  "Core nodes": "",
  "View all core nodes": "",
  "Data node": "",
  "View all data nodes": "",
  "Vega wallet": "",
  "View Vega Wallet API": "",
  "Accessd via:": "",
  "Integrate with our APIs": "",
  "Follow a tutorial and get code snippets": "",
  "View": "",
  "Signing messages using the wallet API": "",
  "Submitting limit orders via REST (inc. using batch instructions)": "",
  "Streaming positions and orders via WS": "",
  "Providing and maintaining a liquidity commitment": "",
  "Submitting an LP shape via REST": "",
  "Streaming accounts, positions, orders and market data via WS": "",
  "Amending an LP shape based on position and market data": "",
  "Submit and maintain best bid/ask via REST": "",
  "Build an arbitrage strategy": "",
  "Stream order book on Binance and Vega": "",
  "Streaming accounts, positions, orders and market data": "",
  "Check prices for profitable arbs (net of fees)": "",
  "Submit market orders via REST on both exchanges capturing profit from price deviation": "",
  "Deposit and withdraw collateral": "",
  "Deposit to a specified Vega key using the Web3 client and bridge contracts": "",
  "Withdraw from a Vega key to a specified Ethereum address, correctly handling the bridge delay": ""
}
